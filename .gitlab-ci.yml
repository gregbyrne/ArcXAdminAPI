stages:
  - test
  - build
  - images
  - prisma scan
  - deploy

default:
  tags:
    - devsecops-instance

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml

build-app:
  stage: build
  image: maven:3-openjdk-11
  script:
    - mkdir -p /root/.m2/repository/org/springframework/
    - mkdir -p /root/.m2/repository/io/
    - unzip static-deps/data.zip -d /root/.m2/repository/org/springframework
    - unzip static-deps/swagger.zip -d /root/.m2/repository/io
    - mvn install -DskipTests
    - ls -al target/
  artifacts:
    paths:
      - target/arcx-0.0.1-SNAPSHOT.jar

admin-api-app:image:build:
  stage: images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/admin-api-app/Dockerfile --destination $CI_REGISTRY_IMAGE/admin-api-app:$CI_COMMIT_SHORT_SHA

admin-api-web:image:build:
  stage: images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/admin-api-web/Dockerfile --destination $CI_REGISTRY_IMAGE/admin-api-web:$CI_COMMIT_SHORT_SHA

prisma scan:
  stage: prisma scan
  tags:
    - twistcli
  variables:
    GIT_STRATEGY: none
  script:
    - 'export PRISMA_CI_TOKEN=$(curl -kH "Content-Type: application/json" -d "{\"username\":\"$PRISMA_CI_USERNAME\", \"password\":\"$PRISMA_CI_PASSWORD\"}" https://prismacloud.epa.gov/api/v22.12/authenticate | jq -r .token)'
    - 'curl --progress-bar -L -k --header "Authorization: Bearer $PRISMA_CI_TOKEN" https://prismacloud.epa.gov/api/v1/util/twistcli > twistcli; chmod a+x twistcli;'
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    - docker pull $CI_REGISTRY_IMAGE/admin-api-app:$CI_COMMIT_SHORT_SHA
    - ./twistcli images scan $CI_REGISTRY_IMAGE/admin-api-app:$CI_COMMIT_SHORT_SHA --address=https://prismacloud.epa.gov --details --token=$PRISMA_CI_TOKEN

    - docker pull $CI_REGISTRY_IMAGE/admin-api-web:$CI_COMMIT_SHORT_SHA
    - ./twistcli images scan $CI_REGISTRY_IMAGE/admin-api-web:$CI_COMMIT_SHORT_SHA --address=https://prismacloud.epa.gov --details --token=$PRISMA_CI_TOKEN
  after_script:
    # Cleanup the above space use on Runner.
    - rm -rf $CI_PROJECT_DIR

deploy to dev:
  when: manual
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - apk add gettext
    - kubectl config set-cluster dev-cluster --server="$KUBE_URL"
    - kubectl config set-cluster dev-cluster --certificate-authority=$KUBE_CA_PEM_FILE --embed-certs=true
    - kubectl config set-credentials gitlab --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=dev-cluster --user=gitlab --namespace="$KUBE_NAMESPACE"
    - kubectl config use-context default
    - envsubst < k8s/arcx-admin-api-configmap.yml | kubectl apply -f -
    - envsubst < k8s/arcx-admin-api-app.yml | kubectl apply -f -
    - envsubst < k8s/arcx-admin-api-web.yml | kubectl apply -f -
  environment:
    name: development
    url: https://arcx-development-admin-api.devsecops-eval.epa.gov
  only:
    - branches
  except:
    - master

deploy to staging:
  when: manual
  stage: deploy
  image: dtzar/helm-kubectl
  variables:
    INGRESS_HOST: "arcx-admin-api-stg.devsecops-eval.epa.gov"
  script:
    - apk add gettext
    - kubectl config set-cluster stg-cluster --server="$KUBE_URL"
    - kubectl config set-cluster stg-cluster --certificate-authority=$KUBE_CA_PEM_FILE --embed-certs=true
    - kubectl config set-credentials gitlab --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=stg-cluster --user=gitlab --namespace="$KUBE_NAMESPACE"
    - kubectl config use-context default
    - envsubst < k8s/arcx-admin-api-configmap.yml | kubectl apply -f -
    - envsubst < k8s/arcx-admin-api-app.yml | kubectl apply -f -
    - envsubst < k8s/arcx-admin-api-web.yml | kubectl apply -f -
  environment:
    name: staging
    url: "https://$INGRESS_HOST"
  only:
    refs:
      - stage
